window.addEventListener("resize", function() {
    "use strict"; window.location.reload(); 
  });
 document.addEventListener("DOMContentLoaded", function()
 {
 /////// Prevent closing from click inside dropdown
 document.querySelectorAll('.dropdown-menu').forEach(function(element)
 {
         element.addEventListener('click', function(e)
         {
                 e.stopPropagation();
         });
 })
 // make it as accordion for smaller screens
 if (window.innerWidth < 992)
 {
         // close all inner dropdowns when parent is closed
         document.querySelectorAll('.navbar .dropdown').forEach(function(everydropdown)
         {
                 everydropdown.addEventListener('hidden.bs.dropdown', function()
                 {
                         // after dropdown is hidden, then find all submenus
                         this.querySelectorAll('.submenu')
                                 .forEach(function(everysubmenu)
                                 {
                                         // hide every submenu as well
                                         everysubmenu
                                                 .style
                                                 .display =
                                                 'none';
                                 });
                 })
         });
         document.querySelectorAll('.dropdown-menu a').forEach(function(element)
         {
                 element.addEventListener('click', function(e)
                 {
                         let nextEl = this.nextElementSibling;
                         if (nextEl && nextEl.classList
                                 .contains('submenu'))
                         {
                                 // prevent opening link if link needs to open dropdown
                                 e.preventDefault();
                                 console.log(nextEl);
                                 if (nextEl.style.display ==
                                         'block')
                                 {
                                         nextEl.style.display =
                                                 'none';
                                 }
                                 else
                                 {
                                         nextEl.style.display =
                                                 'block';
                                 }
                         }
                 });
         })
 }
 // end if innerWidth
 });
 $(document).on('scroll', function(){
        console.log(document.documentElement.scrollTop);
        
        if (document.documentElement.scrollTop > 100) {
            $('#site-logo-sticky').removeClass('d-none');
            $('#main_nav').addClass('justify-content-center');
        } else {
            $('#site-logo-sticky').addClass('d-none');
            $('#main_nav').removeClass('justify-content-center')
        }
});

tinymce.init({
        selector: 'textarea#editor-area',
        plugins: 'preview importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media template codesample table charmap pagebreak nonbreaking anchor insertdatetime advlist lists wordcount help charmap quickbars emoticons accordion',
        toolbar: "undo redo | accordion accordionremove | blocks fontfamily fontsize | bold italic underline strikethrough | align numlist bullist | link image | table media | lineheight outdent indent| forecolor backcolor removeformat | charmap emoticons | code fullscreen preview | save print | pagebreak anchor codesample | ltr rtl",
});

 // DOMContentLoaded  end